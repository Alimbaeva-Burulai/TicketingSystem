<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TicketingSystem.Logic</name>
    </assembly>
    <members>
        <member name="T:TicketingSystem.Logic.AveragesResult">
            <summary>
            This class AverageResult.
            </summary>
        </member>
        <member name="P:TicketingSystem.Logic.AveragesResult.CustomerAge">
            <summary>Gets or sets the age of customer.</summary>
        </member>
        <member name="P:TicketingSystem.Logic.AveragesResult.DiscountedTicketPrice">
            <summary>Gets or sets the discounted ticket price.</summary>
        </member>
        <member name="P:TicketingSystem.Logic.AveragesResult.CashierName">
            <summary>Gets or sets the name of cashier.</summary>
        </member>
        <member name="P:TicketingSystem.Logic.AveragesResult.AverageSalary">
            <summary>Gets or sets the average salary.</summary>
        </member>
        <member name="P:TicketingSystem.Logic.AveragesResult.SumOfSalary">
            <summary>Gets or sets the sum of salary.</summary>
        </member>
        <member name="M:TicketingSystem.Logic.AveragesResult.ToString">
            <summary>
            Mthod ToString.
            </summary>
            <returns>Returns the string.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.AveragesResult.Equals(System.Object)">
            <summary>
            Checking if this objects are equal to other .
            </summary>
            <param name="obj">The entity to join.</param>
            <returns>true or false.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.AveragesResult.GetHashCode">
            <summary>
            Getting the hashcode.
            </summary>
            <returns>Returns the number.</returns>
        </member>
        <member name="T:TicketingSystem.Logic.CashierLogic">
            <summary>
            This class cashierLogic.
            </summary>
        </member>
        <member name="F:TicketingSystem.Logic.CashierLogic.cashierRepo">
            <summary>
            readonly filed for cashierRepo.
            </summary>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.#ctor(TicketingSystem.Repository.ICashierRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:TicketingSystem.Logic.CashierLogic"/> class.
            Constructor for the cachierLogic.
            </summary>
            <param name="cashierRepo">The id to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.AllCashier">
            <summary>
            Collection of cashier method.
            </summary>
            <returns>Returns IList .</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.GetSalaryAverages">
            <summary>
            Mthod for the getting salary averages.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.GetSalaryAveagesAsync">
            <summary>
            This is async version of GetSalaryAverages.
            </summary>
            <returns>It returns a task. </returns>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.IncreaseCashierSalary(System.Int32,System.Int32)">
            <summary>
            Mehod for the Increasing cashier salary.
            </summary>
            <param name="cashierId">The id to join.</param>
            <param name="salary">The salary to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.Add(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Adding new cashier name.
            </summary>
            <param name="name">The id to join.</param>
            <param name="address">The address to join.</param>
            <param name="bankAccount">The bankAccount is to join.</param>
            <param name="insurance">The insurance is to join.</param>
            <param name="salary">The salary is to join.</param>
            <returns>Returns newCashier.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.OneCashier(System.Int32)">
            <summary>
            Getting one cashier.
            </summary>
            <param name="id">The id to join.</param>
            <returns>Returns Cashier.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.Remove(System.Int32)">
            <summary>
            Removing the cashier name.
            </summary>
            <param name="id">The id to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.Modify(System.Int32,TicketingSystem.Data.CodeFirstDB.Cashier)">
            <summary>
            Modifying salary by id.
            </summary>
            <param name="id">The id to join.</param>
            <param name="cashier">The salary to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.GetSalarySum">
            <summary>
            Method for the sum of salary.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.GetSalarySumAsync">
            <summary>
            This is async version of GetSalaryAverages.
            </summary>
            <returns>It returns a task. </returns>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.TicketingSystem#Logic#ICashierLogic#Remove(System.Int32)">
            <summary>
            Removes a specific entry from the database.
            </summary>
            <param name="id">ID of the entry.</param>
            <returns>Returns bool.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.AddCashier(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Modifying name.
            </summary>
            <param name="name">The name to join.</param>
            <param name="address">The address to join.</param>
            <param name="bankAccount">The bankAccount to join.</param>
            <param name="salary">The salary to join.</param>
            <param name="insurance">The insurance to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.CashierLogic.ChangeCashier(System.Int32,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Removes a specific entry from the database.
            </summary>
            <param name="id">ID of the entry.</param>
            <param name="name">Name of the entry.</param>
            <param name="address">Address of the entry.</param>
            <param name="bankAccount">BankAccount of the entry.</param>
            <param name="salary">Salary of the entry.</param>
            <param name="insurance">Insurances of the entry.</param>
            <returns>Returns bool.</returns>
        </member>
        <member name="T:TicketingSystem.Logic.CustomerLogic">
            <summary>
            This class CustomerLogic.
            </summary>
        </member>
        <member name="F:TicketingSystem.Logic.CustomerLogic.customerRepo">
            <summary>
            Readonly filed for the customerRepo.
            </summary>
        </member>
        <member name="M:TicketingSystem.Logic.CustomerLogic.#ctor(TicketingSystem.Repository.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:TicketingSystem.Logic.CustomerLogic"/> class.
            Constructor of CustomerLogic.
            </summary>
            <param name="customerRepo">The id to join.</param>
            <returns>The joined names will be removed.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CustomerLogic.Add(System.String)">
            <summary>
            Adding new field.
            </summary>
            <param name="name">The id to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.CustomerLogic.AllCustomers">
            <summary>
            Method for getting all customers.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CustomerLogic.ChangePrice(System.Int32,System.Int32)">
            <summary>
            Method for the changing price.
            </summary>
            <param name="customerId">The id to join.</param>
            <param name="price">The price to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.CustomerLogic.GetTicketPriceAverages">
            <summary>
            This is GetTicketPriceAverages method.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CustomerLogic.GetTicketPriceAveragesAsync">
            <summary>
            This is async version of GetTicketPriceAverages method.
            </summary>
            <returns>Returns Task.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CustomerLogic.Modify(System.Int32,System.Int32)">
            <summary>
            Modifying the price of ticket by id.
            </summary>
            <param name="id">The id to join.</param>
            <param name="priceOfTicket">The price to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.CustomerLogic.OneCustomer(System.Int32)">
            <summary>
            Method for getting one customer.
            </summary>
            <param name="id">The id to join.</param>
            <returns>Returns customer.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.CustomerLogic.Remove(System.String)">
            <summary>
            Removing name of customer.
            </summary>
            <param name="name">The id to join.</param>
        </member>
        <member name="T:TicketingSystem.Logic.ICashierLogic">
            <summary>
            Documentation that describes the interface goes here.
            </summary>
            <remarks>
            Details about the interface go here.
            </remarks>
        </member>
        <member name="M:TicketingSystem.Logic.ICashierLogic.OneCashier(System.Int32)">
            <summary>
            Method for getting one cashier.
            </summary>
            <param name="id">The id to join.</param>
            <returns>returns cashier.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ICashierLogic.IncreaseCashierSalary(System.Int32,System.Int32)">
            <summary>
            Method for increasing salary.
            </summary>
            <param name="cashierId">The id to join.</param>
            <param name="salary">The salary to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.ICashierLogic.AllCashier">
            <summary>
            Method for the all Cashier.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ICashierLogic.GetSalaryAverages">
            <summary>
            Method for getting average of salary.
            </summary>
            <returns>Returns the IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ICashierLogic.Remove(System.Int32)">
            <summary>
            Removes a specific entry from the database.
            </summary>
            <param name="id">ID of the entry.</param>
            <returns>Returns bool.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ICashierLogic.ChangeCashier(System.Int32,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Removes a specific entry from the database.
            </summary>
            <param name="id">ID of the entry.</param>
            <param name="name">Name of the entry.</param>
            <param name="address">Address of the entry.</param>
            <param name="bankAccount">BankAccount of the entry.</param>
            <param name="salary">Salary of the entry.</param>
            <param name="insurance">Insurances of the entry.</param>
            <returns>Returns bool.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ICashierLogic.Modify(System.Int32,TicketingSystem.Data.CodeFirstDB.Cashier)">
            <summary>
            Modifying name.
            </summary>
            <param name="id">The id to join.</param>
            <param name="cashier">The salary to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.ICashierLogic.GetSalarySum">
            <summary>
            Method for getting sum of salary.
            </summary>
            <returns>Returns the IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ICashierLogic.AddCashier(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Modifying name.
            </summary>
            <param name="name">The name to join.</param>
            <param name="address">The address to join.</param>
            <param name="bankAccount">The bankAccount to join.</param>
            <param name="salary">The salary to join.</param>
            <param name="insurance">The insurance to join.</param>
        </member>
        <member name="T:TicketingSystem.Logic.ICustomerLogic">
            <summary>
            Documentation that describes the interface goes here.
            </summary>
            <remarks>
            Details about the interface go here.
            </remarks>
        </member>
        <member name="M:TicketingSystem.Logic.ICustomerLogic.OneCustomer(System.Int32)">
            <summary>
            Method for getting one customer.
            </summary>
            <param name="id">The id to join.</param>
            <returns>Returns Customer.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ICustomerLogic.ChangePrice(System.Int32,System.Int32)">
            <summary>
            Method for changing price.
            </summary>
            <param name="customerId">The id to join.</param>
            <param name="price">The price to join.</param>>
        </member>
        <member name="M:TicketingSystem.Logic.ICustomerLogic.AllCustomers">
            <summary>
            Method for getting collection of all customers.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ICustomerLogic.GetTicketPriceAverages">
            <summary>
            Method for getting average of ticket price.
            </summary>
            <returns>The joined names will be removed.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ICustomerLogic.Remove(System.String)">
            <summary>
            Removes a specific entry from the database.
            </summary>
            <param name="name">ID of the entry.</param>
        </member>
        <member name="M:TicketingSystem.Logic.ICustomerLogic.Add(System.String)">
            <summary>
            Adding a new entry into a table.
            </summary>
            <param name="name">New entry.</param>
        </member>
        <member name="M:TicketingSystem.Logic.ICustomerLogic.Modify(System.Int32,System.Int32)">
            <summary>
            Modify the entities.
            </summary>
            <param name="id">The id to join.</param>
            <param name="priceOfTicket">The priceOfTicket to join.</param>
        </member>
        <member name="T:TicketingSystem.Logic.IMovieLogic">
            <summary>
            Documentation that describes the interface goes here.
            </summary>
            <remarks>
            Details about the interface go here.
            </remarks>
        </member>
        <member name="M:TicketingSystem.Logic.IMovieLogic.GetOneMovie(System.Int32)">
            <summary>
            Method for getting one movie.
            </summary>
            <param name="id">The id to join.</param>
            <returns>Returns movie.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.IMovieLogic.ChangeMovieDate(System.Int32,System.String)">
            <summary>
            Method for changing date of movie.
            </summary>
            <param name="movieId">The id to join.</param>
            <param name="dateOfWatching">The dateOfWatching to join.</param>>
        </member>
        <member name="M:TicketingSystem.Logic.IMovieLogic.GetAllMovie">
            <summary>
            Method for getting all movie.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.IMovieLogic.GetChangedDate(System.String)">
            <summary>
            Method for getting changed date.
            </summary>
            <param name="getdate">The id to join.</param>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.IMovieLogic.Remove(System.String)">
            <summary>
            Removes a specific entry from the database.
            </summary>
            <param name="name">ID of the entry.</param>
        </member>
        <member name="M:TicketingSystem.Logic.IMovieLogic.Add(System.String)">
            <summary>
            Adding a new entry into a table.
            </summary>
            <param name="name">New entry.</param>
        </member>
        <member name="M:TicketingSystem.Logic.IMovieLogic.Modify(System.Int32,System.String)">
            <summary>
            Modify the entities.
            </summary>
            <param name="id">The id to join.</param>
            <param name="language">The language to join.</param>
        </member>
        <member name="T:TicketingSystem.Logic.ITicketLogic">
            <summary>
            Documentation that describes the interface goes here.
            </summary>
            <remarks>
            Details about the interface go here.
            </remarks>
        </member>
        <member name="M:TicketingSystem.Logic.ITicketLogic.GetOneTicket(System.Int32)">
            <summary>
            Method for getting one ticket.
            </summary>
            <param name="id">The id to join.</param>
            <returns>Returns bookingticket.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ITicketLogic.ChangeTicketVenue(System.Int32,System.Int32)">
            <summary>
            Method for changing ticket venue.
            </summary>
            <param name="ticketId">The id to join.</param>
            <param name="venue">The venue to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.ITicketLogic.GetAllTickets">
            <summary>
            Method for getting all tickets.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.ITicketLogic.GetChangedVenue(System.Int32)">
            <summary>
            Method for getting changed venue.
            </summary>
            <param name="venue">The id to join.</param>
            <returns>Reurns Ilist. </returns>
        </member>
        <member name="M:TicketingSystem.Logic.ITicketLogic.Remove(System.Int32)">
            <summary>
            Removes a specific entry from the database.
            </summary>
            <param name="number">ID of the entry.</param>
        </member>
        <member name="M:TicketingSystem.Logic.ITicketLogic.Add(System.Int32)">
            <summary>
            Adding a new entry into a table.
            </summary>
            <param name="number">New entry.</param>
        </member>
        <member name="M:TicketingSystem.Logic.ITicketLogic.Modify(System.Int32,System.Int32)">
            <summary>
            Modify the entities.
            </summary>
            <param name="id">The id to join.</param>
            <param name="venue">The venue to join.</param>
        </member>
        <member name="T:TicketingSystem.Logic.MovieLogic">
            <summary>
            This class MovieLogic.
            </summary>
        </member>
        <member name="F:TicketingSystem.Logic.MovieLogic.movieRepo">
            <summary>
            readonly movieRepo field.
            </summary>
        </member>
        <member name="M:TicketingSystem.Logic.MovieLogic.#ctor(TicketingSystem.Repository.IMovieRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:TicketingSystem.Logic.MovieLogic"/> class.
            Constructor for MovieLogic.
            </summary>
            <param name="movieRepo">The id to join.</param>
            <returns>The joined names will be removed.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.MovieLogic.Add(System.String)">
            <summary>
            Adding new movie name.
            </summary>
            <param name="name">The id to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.MovieLogic.ChangeMovieDate(System.Int32,System.String)">
            <summary>
            Method for changing movie date.
            </summary>
            <param name="movieId">The id to join.</param>
            <param name="dateOfWatching">The dateOfWatching to join.</param>>
        </member>
        <member name="M:TicketingSystem.Logic.MovieLogic.GetAllMovie">
            <summary>
            Method for getting all movie.
            </summary>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.MovieLogic.GetChangedDate(System.String)">
            <summary>
            Method for getting changed date.
            </summary>
            <param name="getdate">The id to join.</param>
            <returns>Returns IList.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.MovieLogic.GetOneMovie(System.Int32)">
            <summary>
            Method for getting one movie.
            </summary>
            <param name="id">The id to join.</param>
            <returns>Returns movie.</returns>
        </member>
        <member name="M:TicketingSystem.Logic.MovieLogic.Modify(System.Int32,System.String)">
            <summary>
            Modifying the name of movie.
            </summary>
            <param name="id">The id to join.</param>
            <param name="language">The language to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.MovieLogic.Remove(System.String)">
            <summary>
            Removing the name of movie.
            </summary>
            <param name="name">The id to join.</param>
        </member>
        <member name="T:TicketingSystem.Logic.TicketLogic">
            <summary>
            This class TicketLogic.
            </summary>
        </member>
        <member name="F:TicketingSystem.Logic.TicketLogic.ticketRepo">
            <summary>
            Readonly field for ticketRepo.
            </summary>
        </member>
        <member name="M:TicketingSystem.Logic.TicketLogic.#ctor(TicketingSystem.Repository.ITicketRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:TicketingSystem.Logic.TicketLogic"/> class.
            Constructor for TicketLogic.
            </summary>
            <param name="ticketRepo">The id to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.TicketLogic.Add(System.Int32)">
            <summary>
            Adding ticket number.
            </summary>
            <param name="number">The id to join.</param>
        </member>
        <member name="M:TicketingSystem.Logic.TicketLogic.ChangeTicketVenue(System.Int32,System.Int32)">
            <summary>
            Method for changing ticket venue.
            </summary>
            <param name="ticketId">The id to join. </param>
            <param name="venue">The price to join. </param>param>
        </member>
        <member name="M:TicketingSystem.Logic.TicketLogic.GetAllTickets">
            <summary>
            Method for getting all tickets.
            </summary>
            <returns>returns IList of BookingTicket. </returns>
        </member>
        <member name="M:TicketingSystem.Logic.TicketLogic.GetChangedVenue(System.Int32)">
            <summary>
            Method for getting changed venue.
            </summary>
            <param name="venue">The id to join. </param>
            <returns>Returns IList. </returns>
        </member>
        <member name="M:TicketingSystem.Logic.TicketLogic.GetOneTicket(System.Int32)">
            <summary>
            Method for getting one ticket.
            </summary>
            <param name="id">The id to join. </param>
            <returns>Returns BookingTicket. </returns>
        </member>
        <member name="M:TicketingSystem.Logic.TicketLogic.Modify(System.Int32,System.Int32)">
            <summary>
            Modifying venue by id.
            </summary>
            <param name="id">The id to join. </param>
            <param name="venue">The venue is joining.</param>
        </member>
        <member name="M:TicketingSystem.Logic.TicketLogic.Remove(System.Int32)">
            <summary>
            Removing number of ticket.
            </summary>
            <param name="number">The id to join. </param>
        </member>
    </members>
</doc>
